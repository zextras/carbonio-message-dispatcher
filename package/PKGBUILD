pkgname="carbonio-message-dispatcher"
pkgver="0.13.0"
pkgrel="1"
pkgdesc="Carbonio Message Dispatcher component"
maintainer="Zextras <packages@zextras.com>"
arch=('x86_64')
license=("AGPL-3.0-only")
section="admin"
priority="optional"
url="https://www.zextras.com/"
depends=(
  "carbonio-erlang"
  "carbonio-openssl"
  "jq"
  "pending-setups"
  "service-discover"
)
makedepends__apt=(
  "carbonio-elixir"
  "carbonio-erlang"
  "carbonio-openssl"
  "git"
  "unixodbc-dev"
  "zlib1g-dev"
  "postgresql-client"
)
makedepends__yum=(
  "carbonio-elixir"
  "carbonio-erlang"
  "carbonio-openssl"
  "git"
  "unixODBC-devel"
  "zlib-devel"
  "postgresql"
)

source=(
  "https://github.com/esl/MongooseIM/archive/6.2.0.tar.gz"
  "configure.vars.config"
  "carbonio-message-dispatcher"
  "carbonio-message-dispatcher-http.hcl"
  "carbonio-message-dispatcher-xmpp.hcl"
  "carbonio-message-dispatcher-auth.hcl"
  "carbonio-message-dispatcher.service"
  "carbonio-message-dispatcher-http-sidecar.service"
  "carbonio-message-dispatcher-xmpp-sidecar.service"
  "carbonio-message-dispatcher-auth-sidecar.service"
  "carbonio-message-dispatcher-setup.sh"
  "mongooseim.toml"
  "app.config"
  "intentions-http.json"
  "intentions-xmpp.json"
  "intentions-auth.json"
  "policies.json"
  "service-protocol-http.json"
  "service-protocol-xmpp.json"
  "service-protocol-auth.json"
  "carbonio-message-dispatcher-auth.service"
  "logback.xml"
  "carbonio-message-dispatcher-migration"
  "pgsql-script-initial-schema-mongooseim-6.0.0.sql"
  "pgsql-script-migrations-6.0.0.sql"
  "pgsql-script-migrations-6.2.0.sql"
  "mod_event_pusher_http_defaults.patch"
)
backup=(
  "etc/zextras/service-discover/carbonio-message-dispatcher-http.hcl"
  "etc/zextras/service-discover/carbonio-message-dispatcher-xmpp.hcl"
  "etc/zextras/service-discover/carbonio-message-dispatcher-auth.hcl"
  "etc/carbonio/message-dispatcher/mongooseim.toml"
  "etc/carbonio/message-dispatcher/app.config"
  "etc/carbonio/message-dispatcher/logback.xml"
)
sha256sums=('2ebf5f34f66c5b97c618a1adfa11a36df650a6fe07238b90089bbd72ba39c44a'
  'a55ee89a02e901831baf61faa3b22127ae93e4cccac8d6f1032bfa4202985089'
  '653a9deeabf6fde20002cd36956eb6f4afff3cfa34ad334008642c5cd967b3a5'
  'cbafb8d34fac0e23f385bf5225279eac0cd7815dc51082ca8b35a0944551a4b2'
  '0312bb4d66fd0ed34dfa4dc9f38bb253ed6822c71390cd2a858b36bb239a2523'
  '671a108206ae027d3a3cc3627ef104648f95f2cb697000c82ab081e2dda30976'
  '6cca2865bdffc74edd982bbd9901f271c74244dc5ea7347784f93e04cb0f894e'
  'ed4612556f0f04a750d6f6cc7ab9b40a72e1034898ef0fd7c5c342ab5df8c822'
  '1d2ee12e586ad43b856919afb9c5883b8d95876a17bdd90636649fefafe05b3e'
  '2e668553091433e98b056880ec4c2527aed15c69301f9be618e69d7bb541e7ab'
  '656208c6908eacf2147bff0a40c3f4a71763ac505702099a46c3d95967a55ce4'
  '44316ebf9f7740afed8bad206023d6b666464c3256d436f8cd8e96d6429cd004'
  'f7384b4fd538b267f8c7a708185a9c56f5444ec04526d4b85ca5068f538d1abc'
  'c5a04071a24f45f79d28135b79da396a607baf587d880f66f94d6afee77070b3'
  '7daba3df5207eeebc90b8754f34d669360de14c29404359bb6e782434253438a'
  '4c6e3661865d28018f2f5049746389008d3f6bb8a7e5821604c684592f410e07'
  '073efa7ea1a80e06a53c1678d0fa18b81f407a3b08b403adac6a6b4b2906880f'
  '58bf32b3212d9333edaec81260121a460c738ede9be5a26c29bd0a0f3c0ee3e9'
  'c310dee43435bf572532f49947e87e0c33605a43b5ed0980606e147d6fc1e0a5'
  'ecca7efddcff1a5efe6d38fd64bf489638bdac94c6c5ec7178866354a9ad5a91'
  '8aea6c1d0fa90e27863220427fdc3f6fb24b45d69e7f24287e606c5aeda54ce7'
  'd1ec2c67cd15263fc84ffb891f4276d1e147084a3e4eb1bc1801de2ca5bf32e4'
  '692079ea85e441db8565b1fbc38b460d4f36136d598d7d14c51c1885896e3053'
  'a32f61262ba7a51ba268c41801684c26668fadea676ae8e0f90e38bd754d1455'
  'cf583dd0a4ccd21fdb04a4600792657a762609b3cda4322252643d3ee28e3002'
  'f223f80047745435b2114430edf7d21e1fb288f28cc90180fb812e2a51341db8'
  '5c8d45d303f15dd9d9b734b2803ddf1cc763546d9ca0e0e742c88c1654258b32')

build() {
  cd "${srcdir}/MongooseIM-6.2.0"
  git apply ../mod_event_pusher_http_defaults.patch

  export PATH="/opt/zextras/common/bin/:$PATH"
  export LDFLAGS="-Wl,-rpath,/opt/zextras/common/lib -L/opt/zextras/common/lib"
  export CFLAGS="-I/opt/zextras/common/include"

  cp ../configure.vars.config rel

  echo 'export MONGOOSEIM_CONFIGURED="yes"' >configure.out
  echo 'export APPS="epgsql"' >>configure.out
  echo 'export PREFIX="/opt/zextras/common"' >>configure.out
  echo 'export RELTOOL_VARS="rel/configure.vars.config"' >>configure.out
  echo 'export SYSTEM="yes"' >>configure.out
  echo "export BIN_DIR=\"${pkgdir}/opt/zextras/common/bin\"" >>configure.out
  echo 'export ETC_DIR="/etc/carbonio/message-dispatcher"' >>configure.out
  echo "export LIB_DIR=\"${pkgdir}/opt/zextras/common/lib/mongooseim\"" >>configure.out
  echo "export LOG_DIR=\"${pkgdir}/var/log/carbonio/message-dispatcher\"" >>configure.out
  echo 'export PID_DIR="/run"' >>configure.out
  echo "export STATUS_DIR=\"${pkgdir}/var/lib/carbonio/message-dispatcher\"" >>configure.out
  echo "export MDB_DIR=\"${pkgdir}/var/lib/carbonio/message-dispatcher\"" >>configure.out
  echo "export LOCK_DIR=\"${pkgdir}/var/lock/carbonio/message-dispatcher\"" >>configure.out
  make install
}

package() {
  cd "${srcdir}"/../../dispatcher/carbonio-message-dispatcher-auth/target
  install -Dm 644 ./carbonio-message-dispatcher-auth-fatjar.jar \
    "${pkgdir}/opt/zextras/lib/jars/carbonio-message-dispatcher-auth.jar"

  cd "${srcdir}"
  #Overwriting mongoose files with ours
  install -Dm 644 mongooseim.toml \
    "${pkgdir}/etc/carbonio/message-dispatcher/mongooseim.toml"
  install -Dm 644 app.config \
    "${pkgdir}/etc/carbonio/message-dispatcher/app.config"

  #Our files
  install -Dm 755 carbonio-message-dispatcher \
    "${pkgdir}/usr/bin/carbonio-message-dispatcher"
  install -Dm 644 carbonio-message-dispatcher.service \
    "${pkgdir}/lib/systemd/system/carbonio-message-dispatcher.service"
  install -Dm 644 carbonio-message-dispatcher-http-sidecar.service \
    "${pkgdir}/lib/systemd/system/carbonio-message-dispatcher-http-sidecar.service"
  install -Dm 644 carbonio-message-dispatcher-xmpp-sidecar.service \
    "${pkgdir}/lib/systemd/system/carbonio-message-dispatcher-xmpp-sidecar.service"
  install -Dm 644 carbonio-message-dispatcher-auth-sidecar.service \
    "${pkgdir}/lib/systemd/system/carbonio-message-dispatcher-auth-sidecar.service"
  install -Dm 644 carbonio-message-dispatcher-http.hcl \
    "${pkgdir}/etc/zextras/service-discover/carbonio-message-dispatcher-http.hcl"
  install -Dm 644 carbonio-message-dispatcher-xmpp.hcl \
    "${pkgdir}/etc/zextras/service-discover/carbonio-message-dispatcher-xmpp.hcl"
  install -Dm 644 carbonio-message-dispatcher-auth.hcl \
    "${pkgdir}/etc/zextras/service-discover/carbonio-message-dispatcher-auth.hcl"
  install -Dm 644 carbonio-message-dispatcher-setup.sh \
    "${pkgdir}/etc/zextras/pending-setups.d/carbonio-message-dispatcher.sh"
  install -Dm 644 intentions-http.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/intentions-http.json"
  install -Dm 644 intentions-xmpp.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/intentions-xmpp.json"
  install -Dm 644 intentions-auth.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/intentions-auth.json"
  install -Dm 644 policies.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/policies.json"
  install -Dm 644 service-protocol-http.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/service-protocol-http.json"
  install -Dm 644 service-protocol-xmpp.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/service-protocol-xmpp.json"
  install -Dm 644 service-protocol-auth.json \
    "${pkgdir}/etc/carbonio/message-dispatcher/service-discover/service-protocol-auth.json"
  install -Dm 644 carbonio-message-dispatcher-auth.service \
    "${pkgdir}/lib/systemd/system/carbonio-message-dispatcher-auth.service"
  install -Dm 644 logback.xml \
    "${pkgdir}/etc/carbonio/message-dispatcher/logback.xml"

  install -Dm 755 carbonio-message-dispatcher-migration \
    "${pkgdir}/usr/bin/carbonio-message-dispatcher-migration"
  install -Dm 644 pgsql-script-initial-schema-mongooseim-6.0.0.sql \
    "${pkgdir}/etc/carbonio/message-dispatcher/sql-scripts/initial-schema.sql"
  install -Dm 644 pgsql-script-migrations-6.0.0.sql \
    "${pkgdir}/etc/carbonio/message-dispatcher/sql-scripts/migrations/6.0.0.sql"
  install -Dm 644 pgsql-script-migrations-6.2.0.sql \
    "${pkgdir}/etc/carbonio/message-dispatcher/sql-scripts/migrations/6.2.0.sql"

  cp "${pkgdir}/opt/zextras/common/lib/mongooseim/releases/6.2.0/vm.args" \
    "${pkgdir}/etc/carbonio/message-dispatcher/vm.args"

  cp "${pkgdir}/opt/zextras/common/lib/mongooseim/etc/vm.dist.args.example" \
    "${pkgdir}/etc/carbonio/message-dispatcher/vm.dist.args"

  install -d "${pkgdir}/opt/zextras/common/lib/mongooseim/log"
}

postinst() {
  getent group 'carbonio-message-dispatcher' >/dev/null ||
    groupadd -r 'carbonio-message-dispatcher'
  getent passwd 'carbonio-message-dispatcher' >/dev/null ||
    useradd -r -M -g 'carbonio-message-dispatcher' -d /var/lib/carbonio/message-dispatcher -s /sbin/nologin 'carbonio-message-dispatcher'

  chown carbonio-message-dispatcher:carbonio-message-dispatcher /var/log/carbonio/message-dispatcher
  chown carbonio-message-dispatcher:carbonio-message-dispatcher /var/lib/carbonio/message-dispatcher
  chown carbonio-message-dispatcher:carbonio-message-dispatcher /var/lock/carbonio/message-dispatcher
  chown carbonio-message-dispatcher:carbonio-message-dispatcher /var/lib/carbonio/message-dispatcher
  chown carbonio-message-dispatcher:carbonio-message-dispatcher /opt/zextras/common/lib/mongooseim/log

  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
    systemctl enable carbonio-message-dispatcher-auth.service >/dev/null 2>&1 || :
    systemctl enable carbonio-message-dispatcher.service >/dev/null 2>&1 || :
    systemctl enable carbonio-message-dispatcher-http-sidecar.service >/dev/null 2>&1 || :
    systemctl enable carbonio-message-dispatcher-xmpp-sidecar.service >/dev/null 2>&1 || :
    systemctl enable carbonio-message-dispatcher-auth-sidecar.service >/dev/null 2>&1 || :
  fi

  echo "======================================================"
  echo "Carbonio Message Dispatcher installed successfully!"
  echo "You must run pending-setups to configure it correctly."
  echo "======================================================"
}

prerm() {
  if [ -d /run/systemd/system ]; then
    systemctl --no-reload disable carbonio-message-dispatcher.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-message-dispatcher-http-sidecar.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-message-dispatcher-xmpp-sidecar.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-message-dispatcher-auth-sidecar.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-message-dispatcher-auth.service >/dev/null 2>&1 || :
    systemctl stop carbonio-message-dispatcher.service >/dev/null 2>&1 || :
    systemctl stop carbonio-message-dispatcher-http-sidecar.service >/dev/null 2>&1 || :
    systemctl stop carbonio-message-dispatcher-xmpp-sidecar.service >/dev/null 2>&1 || :
    systemctl stop carbonio-message-dispatcher-auth-sidecar.service >/dev/null 2>&1 || :
    systemctl stop carbonio-message-dispatcher-auth.service >/dev/null 2>&1 || :
  fi
}

postrm() {
  rm -f /etc/carbonio/message-dispatcher/service-discover/token
  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
  fi
}
